aml_experiment_details:
  compute_name: cvt-compute
  env_name: cvt_environment
  env_version: 1
  src_dir: "."

metadata_pipeline:
  datastore: "nieuw_panorama_beelden_geo360"
  inputs:
    coco_annotations: "geo30-coco.json"
    images: "selectie_original/images/val"
  outputs:
    yolo_annotations: "EXAMPLE/selectie_original/labels/val"
    metadata: "EXAMPLE/metadata_pipeline_out/panorama_metadata.json"
    coco_annotations: "EXAMPLE/metadata_pipeline_out/coco.json"
  flags:
    # Possible values: NONE, CONVERT_AZURE_COCO_TO_YOLO, CONVERT_AZURE_COCO_TO_COCO, CREATE_METADATA
    - CONVERT_AZURE_COCO_TO_YOLO
    - CONVERT_AZURE_COCO_TO_COCO

training_pipeline:
  model_parameters:
    img_size: 2048
    batch_size: 8
    epochs: 2
  inputs:
    training_data: "azureml://FOLDER_PATH_TO_TRAINING_DATA"
    model_weights: "azureml://NAMED_ASSET_URI_MODEL_WEIGHTS_FILE"
  outputs:
    trained_model: "azureml://FOLDER_PATH_WHERE_STORE_TRAINED_MODEL"
  flags:
    # Possible values: NONE (in case no flag is needed), STORE_MODEL
    - NONE


pre_inference_pipeline:
  customers:
    - example-customer
  inputs:
    number_of_batches: 1


inference_pipeline:
  customer_name: data_office
  model_parameters:
    imgsz: 4000
    save_txt: True
    exist_ok: True
    skip_evaluation: True
    save_blurred_image: True
    batch_size: 4
  database_parameters:
    db_hostname: "psql-flexi-blur-ont-weu-irs-01.postgres.database.azure.com"
    db_username: "aml-compute-cvo-p"
    db_name: "blur"

performance_evaluation_pipeline:
  datastore: "nieuw_panorama_beelden_geo360"
  inputs:
    yolo_dataset: "selectie_original"
    coco_annotations: "EXAMPLE/metadata_pipeline_out/coco.json"
    model: ""
  outputs:
    yolo_validation_output: "EXAMPLE"
    cvt_metrics: "EXAMPLE/cvt_metrics"
  model_parameters:
    imgsz: 2048
    name: "test"
    save_blurred_image: True
  metrics_metadata:
    image_height: 4000
    image_width: 8000
    image_area: 32000000

logging:
  loglevel_own: "WARNING"  # override loglevel for packages defined in `own_packages`
  own_packages: ["__main__", "blurring_as_a_service"]
  basic_config:
    # log config as arguments to `logging.basicConfig`
    level: WARNING
    format: "%(asctime)s|%(levelname)-8s|%(name)s|%(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
